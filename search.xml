<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>next 主题基本设置</title>
    <url>/2023/09/03/next%E4%B8%BB%E9%A2%98%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>为博客更换 next 主题，并做基础设置，使其能用。</p>
<span id="more"></span>

<ol>
<li><h2 id="更换next主题"><a href="#更换next主题" class="headerlink" title="更换next主题"></a>更换next主题</h2><ol>
<li><p>从<a href="https://github.com/hexojs/hexo/wiki/Themes#n">hexo主题库</a>中找一款中意的下载到 blog-dir&#x2F;themes 文件夹中</p>
</li>
<li><p>设置 hexo 配置文件 <code>_config.yml</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Extensions</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Plugins: https://hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Themes: https://hexo.io/themes/</span></span></span><br><span class="line">theme: next  # 这里的主题名字要和themes文件夹中下载的主题文件夹名字一致</span><br></pre></td></tr></table></figure>

<p>将这里改为你下载的主题，顺便选 next 的原因是维护比较好，界面简约</p>
</li>
<li><p>然后 <code>hexo g</code> <code>hexo d</code> 就完成主题更换。</p>
</li>
</ol>
</li>
<li><h2 id="next-主题优化"><a href="#next-主题优化" class="headerlink" title="next 主题优化"></a>next 主题优化</h2><p>现在有两个关键配置文件，</p>
<ul>
<li>一个是 <code>site-dir\themes\next</code> 文件夹下的 <code>_config.yml</code>，</li>
<li>另一个是<code>site-dir</code> 文件夹下的 <code>_config.yml</code>，</li>
<li>两个文件同名，但是前者是关于 next 主题的配置，后者是关于 hexo 博客的配置。</li>
</ul>
<ol>
<li><h3 id="站点基本配置信息"><a href="#站点基本配置信息" class="headerlink" title="站点基本配置信息"></a>站点基本配置信息</h3><p>更改 hexo 配置文件为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Site</span></span><br><span class="line">title: Focus2flow</span><br><span class="line">subtitle: &#x27;less is more&#x27;</span><br><span class="line">description: &#x27;技术，人生，思考，自我&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: sky</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="更改-next-的-scheme"><a href="#更改-next-的-scheme" class="headerlink" title="更改 next 的 scheme"></a>更改 next 的 scheme</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Schemes</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Muse</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Mist</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h3><p>添加标签，分类关于三个页面。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先在 next 配置文件中打开这三个开关</span></span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line"><span class="meta prompt_">  </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 hexo 命令在 <span class="built_in">source</span> 目录下创建三个文件夹</span></span><br><span class="line">hexo n page about</span><br><span class="line">hexo n page tags</span><br><span class="line">hexo n page categories</span><br></pre></td></tr></table></figure>

<p>此时在四个文件夹中自动生成了对应页面的 md 文档，hexo s 运行博客也可以在首页访问到对应页面，问题是这四个功能页面跟普通的post中的内容页面是有区别的，具体来讲：</p>
<ul>
<li>about 页暂不清楚</li>
<li>tags 页要根据 post 中博文在文件头部设置的标签对文章进行分类</li>
<li>categories 页要根据类别进行分类，类似于文件夹</li>
<li>archives 页对本博客所有文章按时间轴列出</li>
</ul>
<p>因此需要对这这些功能文件在文件头部用 type 字段进行说明，next 识别到类型说明才能启动对应的算法从 post 里的博文里统计并呈现对应信息。</p>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230903215225417.png" alt="image-20230903215225417"></p>
<p>那么写博文时候怎样设置 tags catagories 呢？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置标签</span></span><br><span class="line">title: 标签测试文章标题</span><br><span class="line">tags: </span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">  ...</span><br><span class="line"><span class="meta prompt_">  </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置分类</span></span><br><span class="line">title: 分类测试文章标题</span><br><span class="line">categories: 分类名</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">另一种设置方法</span></span><br><span class="line">tags: [&quot;tag1&quot;,&quot;tag2&quot;]</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="添加阅读全文按钮"><a href="#添加阅读全文按钮" class="headerlink" title="添加阅读全文按钮"></a>添加阅读全文按钮</h3><p>在你认为合适的地方添加：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h3><ol>
<li><p>安装 <a href="https://links.jianshu.com/go?to=https://github.com/flashlab/hexo-generator-search">hexo-generator-searchdb</a> 插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-generator-searchdb --save</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开站点配置文件找到 <code>Extensions</code> 在下面添加</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">搜索</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li>
</ol>
<p>3、打开主题配置文件找到<code>Local search</code>，将<code>enable</code>设置为<code>true</code></p>
</li>
</ol>
</li>
</ol>
<p>至此就是一个打开可以用起来的博客了，那么梳理一下写新文章的合理步骤：</p>
<ol>
<li><code>hexo n name </code> 在 post 中生成一个带文件头的 md 文档</li>
<li>typora 接管文档，写博客</li>
<li>写完之后 hexo 生成，部署</li>
</ol>
<p><strong>参考文章：</strong></p>
<p><a href="https://hexo.io/">hexo 官方文档</a></p>
<p><a href="https://theme-next.js.org/">next 官方文档</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&mid=2247488750&idx=1&sn=bddb76b8e85d04b303b3d10024b8a56b&chksm=eb47150adc309c1cfe5f847acaf6a3eb7de3efb3c7f2a87e708a686a740aa364c33c80ea3000&token=1693393167&lang=zh_CN#rd">博客的意义</a></p>
<p><a href="https://www.jianshu.com/p/3a05351a37dc">基础优化</a></p>
<p><strong>未来优化方向：</strong></p>
<p><a href="https://www.lovebykin.com/4288776826/">鉴于分类页太丑</a></p>
<p><a href="https://blog.juanertu.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">一个系列博客有机会再优化</a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows  环境下利用 Github page 搭建博客环境</title>
    <url>/2023/09/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>Github + hexo 搭建个人博客</p>
<span id="more"></span>

<ol>
<li><h2 id="本地环境准备"><a href="#本地环境准备" class="headerlink" title="本地环境准备"></a>本地环境准备</h2><ol>
<li><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><blockquote>
<p>目的是为了利用 git 和 Github 仓库进行交互</p>
</blockquote>
<ul>
<li><a href="https://git-scm.com/download/win">下载官方 git</a>，选择合适版本，</li>
<li>将 git 可执行文件路径添加到全局环境变量。</li>
<li>在 PowerShell 中执行 <code>git version</code>,检查是否安装并设置成功。</li>
</ul>
</li>
<li><h3 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h3><blockquote>
<p>目的是使用其包管理软件 npm 安装 hexo ，也可能与 hexo s 命令有关</p>
</blockquote>
<ul>
<li><a href="https://nodejs.org/en/download">下载官方 nodejs</a>，选择合适版本</li>
<li>将 node 可执行文件路径添加到全局环境变量。</li>
<li>在 PowerShell 中执行 <code>node -v</code>,检查是否安装并设置成功</li>
</ul>
</li>
<li><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><blockquote>
<p>hexo 是一款优秀的博客管理软件？这样定位不知道是否合适</p>
</blockquote>
<ul>
<li>在 git-bash 中使用命令 <code>npm install hexo -g</code> 安装</li>
<li>在 git-bash 中使用命令 <code>hexo -v</code> 验证安装</li>
</ul>
</li>
<li><h3 id="安装-hexo-developer-git"><a href="#安装-hexo-developer-git" class="headerlink" title="安装 hexo-developer-git"></a>安装 hexo-developer-git</h3><blockquote>
<p>这个是 <code>hexo d</code> 命令中将本地编译好的博客部署到 github 仓库时，hexo 和 git 交互的软件</p>
</blockquote>
<ul>
<li>在 git-bash 中使用命令 <code>npm install --save hexo-deployer-git</code> 安装</li>
</ul>
</li>
</ol>
</li>
<li><h2 id="Github-仓库设置"><a href="#Github-仓库设置" class="headerlink" title="Github 仓库设置"></a>Github 仓库设置</h2><ol>
<li><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><blockquote>
<p>默认情况下 github 允许每一个用户建立一个博客仓库</p>
</blockquote>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230903131724407.png" alt="image-20230903131724407"></p>
<p>这里似乎并不能看出这个仓库是专用于搭建博客用的，有待将来研究 Github Pages 的说明。</p>
</li>
</ol>
</li>
<li><h2 id="Git-与-Github-交互设置"><a href="#Git-与-Github-交互设置" class="headerlink" title="Git 与 Github 交互设置"></a>Git 与 Github 交互设置</h2><ol>
<li><h3 id="Git-客户端生成-ssh-公钥"><a href="#Git-客户端生成-ssh-公钥" class="headerlink" title="Git 客户端生成 ssh 公钥"></a>Git 客户端生成 ssh 公钥</h3><ol>
<li><p>在 git-bash 中使用 <code>ssh-keygen -t rsa -C &quot;example@email.com&quot;</code>生成密钥对</p>
</li>
<li><p><code>cd ~/.ssh</code> 进入到 ssh 本地秘钥文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">README.md  config  id_rsa  id_rsa.pub  known_hosts  known_hosts.old</span><br></pre></td></tr></table></figure>
</li>
<li><p>将其中的公钥 <code>id_rsa.pub</code> 的内容复制出来</p>
</li>
</ol>
</li>
<li><h3 id="Github-添加-Git-产生的公钥"><a href="#Github-添加-Git-产生的公钥" class="headerlink" title="Github 添加 Git 产生的公钥"></a>Github 添加 Git 产生的公钥</h3><p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230903134218399.png" alt="image-20230903134218399"></p>
</li>
<li><h3 id="使用-ssh-T-git-github-com-命令测试是否成功"><a href="#使用-ssh-T-git-github-com-命令测试是否成功" class="headerlink" title="使用 ssh -T git@github.com 命令测试是否成功"></a>使用 <code>ssh -T git@github.com</code> 命令测试是否成功</h3></li>
<li><h3 id="设置-Git-用户名和邮箱"><a href="#设置-Git-用户名和邮箱" class="headerlink" title="设置 Git 用户名和邮箱"></a>设置 Git 用户名和邮箱</h3><ul>
<li>设置用户名：<code>git config --global user.name &quot;ColorMao&quot;</code></li>
<li>设置邮箱：<code>git config --global user.email &quot;zhangyumao@petalmail.com&quot;</code></li>
</ul>
</li>
</ol>
</li>
<li><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><ol>
<li><p>在本机合适的位置建立一个存放本地博客文件的文件夹，如我的：<code>E:\Blogs\Focus2flow</code>，git-bash 进入该空文件夹</p>
</li>
<li><p>使用 hexo 本地部署博客</p>
<ol>
<li><code>hexo init</code> 初始化博客文件</li>
<li><code>hexo generate</code> 编译生成可部署的 html 文件</li>
<li><code>hexo server</code> 本地部博客用于预览</li>
</ol>
</li>
<li><p>博客部署到仓库</p>
<ol>
<li><p>在博客文件夹根目录找到 hexo 配置文件 <code>_config.yml</code></p>
</li>
<li><p>更改其中的配置选项为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:captain0X01/captain0X01.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>hexo deploy</code> 部署到 GIthub仓库</p>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230903142806727.png" alt="image-20230903142806727"></p>
<p>可以观察到文件确实推上去了，那么远程访问一下博客。</p>
</li>
<li><p>访问博客<a href="https://yimaginer.github.io/">https://yimaginer.github.io/</a></p>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230903142952837.png" alt="image-20230903142952837"></p>
<p>访问成功，至此我们在 Github 上搭建了一个幼儿园级的个人博客</p>
</li>
</ol>
</li>
</ol>
</li>
<li><h2 id="新增博文"><a href="#新增博文" class="headerlink" title="新增博文"></a>新增博文</h2><ol>
<li><p>将写好的 markdown 文档放进 site-dir&#x2F;source&#x2F;_posts 文件夹中</p>
</li>
<li><p><code>hexo generate</code> 重新生成</p>
</li>
<li><p><code>hexo deploy</code> 部署，如图</p>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230903144752739.png" alt="image-20230903144752739"></p>
</li>
<li><p>这样一个幼儿园博客，就实际使用来看还有下面的差距，如图编号</p>
<ol>
<li>博文是全篇展开放在主页，不科学</li>
<li>这个引用文字的格式转换成了这样，是这个默认主题的原因</li>
<li>新上传的文章没有标题，不行</li>
<li>博客的名称还是默认的，要改</li>
<li>顺便这配色不怎么好看</li>
</ol>
</li>
<li><p>接下里通过换一个主题，并进行设置，打造一个可以实际使用的博客。</p>
</li>
</ol>
</li>
</ol>
<p><strong>参考博客</strong></p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/550709268">利用Github DIY自己的个人博客</a></li>
<li><a href="https://www.cnblogs.com/Alight/p/4354294.html">这是一个有用的思考</a></li>
<li><a href="https://docs.github.com/zh/pages/quickstart">Github pages 官方文档</a></li>
</ul>
<p><strong>补充内容：hexo 命令的具象化解释</strong></p>
<p>执行完<code>hexo init</code></p>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230902175759500.png" alt="image-20230902175759500"></p>
<p><code>hexo generate</code></p>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230902180712442.png" alt="image-20230902180712442"></p>
<p><code>hexo clean</code>是把生成的东西清掉了</p>
<p><code>hexo d</code></p>
<p><img src="https://picgo-buk.oss-cn-chengdu.aliyuncs.com/img/image-20230902181617668.png" alt="image-20230902181617668"></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
</search>
